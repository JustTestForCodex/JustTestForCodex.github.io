!function(e){var t={};function n(l){if(t[l])return t[l].exports;var s=t[l]={i:l,l:!1,exports:{}};return e[l].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(l,s,function(t){return e[t]}.bind(null,s));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var l=class{constructor(e){this.context=e,this.controctave={C:32.7,"C#":34.6,D:36.7,"D#":38.9,E:41.2,F:43.6,"F#":46.3,G:49,"G#":51.9,A:55,"A#":58.3,B:61.8},this.notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this.melody=[]}createMelody(e){for(let t=0;t<e;t++){const e=this.notes[Math.floor(Math.random()*this.notes.length)],t=3+Math.floor(6*Math.random()),n="#"==e[1];this.melody=n?[...this.melody,e[0]+t+e[1]]:[...this.melody,e+t]}}init(){this.oscillator=this.context.createOscillator(),this.gainNode=this.context.createGain(),this.oscillator.connect(this.gainNode),this.gainNode.connect(this.context.destination),this.gainNode.gain.value=this.volume,this.oscillator.type="sine"}playNote(e){const t=e[0],n=parseInt(e[1]);let l="#"==e[2]?this.controctave[t+"#"]*Math.pow(2,n-1):this.controctave[t]*Math.pow(2,n-1);this.init();const s=this.context.currentTime;this.oscillator.frequency.value=l,this.gainNode.gain.exponentialRampToValueAtTime(1e-5,s+1),this.oscillator.start(s)}playMelody(e){for(let t=0;t<this.melody.length;t++){const n=setTimeout(()=>{this.continue?this.playNote(this.melody[t]):(this.stop(),clearTimeout(n))},e*t)}}play(e){this.continue=!0,this.playMelody(e),this.interval=setInterval(()=>this.playMelody(e),e*this.melody.length)}stop(){this.continue=!1,clearInterval(this.interval)}setVolume(e){this.volume=e}};const s=new(window.AudioContext||window.webkitAudioContext),i=[];let o=[...document.getElementsByClassName("toggle")],a=o.pop(),c=o,r=[...document.getElementsByClassName("row")],u=(document.getElementById("info"),document.getElementById("add")),d=[...document.getElementsByClassName("delete")],p=[...document.getElementsByClassName("volume")],m=[...document.getElementsByClassName("effect_gain")],h=[...document.getElementsByClassName("melody")],v=[...document.getElementsByClassName("interval")],y=document.getElementsByClassName("panel")[0];m.map(e=>e.addEventListener("input",(function(){this.nextElementSibling.value=parseFloat(this.value).toFixed(2)}))),u.addEventListener("click",(function(){(()=>{const e=document.getElementsByClassName("row_last")[0],t=document.getElementsByClassName("panel")[0],n=parseFloat(getComputedStyle(t).height);e.insertAdjacentHTML("beforebegin",'<div class="row">\n                    <div class="ceil">\n                        <button class="play toggle">\n                            <span class="btn-text">Play</span>\n                        </button>\n                    </div>\n                    <div class="ceil">\n                        <div class="select-wrapper">\n                            <select class="instrument">\n                                <option>Piano</option>\n                                <option>Guitar</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="ceil">\n                        <input type="text" class="melody" readonly>\n                    </div>\n                    <div class="ceil">\n                        <input type="text" class="interval" value="1000" minlength="3" maxlength="6">\n                    </div>\n                    <div class="ceil">\n                        <div class="select-wrapper">\n                            <select class="effect">\n                                <option>Пункт 1</option>\n                                <option>Пункт 2</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="ceil">\n                        <input type="range" name="effect_gain" class="effect_gain" min="0" max="10" step="0.01"\n                            value="5">\n                        <output>5.00</output>\n                    </div>\n                    <div class="ceil">\n                        <input type="range" name="volume" class="volume" min="0" max="10" step="0.01" value="5">\n                        <output>5.00</output>\n                    </div>\n                    <button class="delete"></button>\n                </div>');const l=e.previousElementSibling;c=[...c,l.children[0].children[0]],h=[...h,l.children[2].children[0]],v=[...v,l.children[3].children[0]],p=[...p,l.children[6].children[0]],d=[...d,l.lastElementChild],r.splice(r.length-1,0,l),t.style.height=`${n+60}px`})()})),y.addEventListener("click",e=>{const t=e.target,n=t.closest(".play"),o=t.closest(".stop"),a=t.closest(".delete");if(!(n||o||a))return;let u;for(let e=0;e<c.length;e++)if(n===c[e]||o===c[e]){u=e;break}if(n)(e=>{i[e]=new l(s);const t=i[e],n=2+Math.floor(5*Math.random());t.createMelody(n);const o=v[e].value;if(o<50)return void alert("Interval must be greater than 50");h[e].value=t.melody.join(" ");const a=p[e].value/10;console.log(a),t.setVolume(a),t.play(o)})(u),v[u].value>=50&&(n.classList.value=n.classList.value.replace("play","stop"),n.children[0].innerText="Stop");else if(o)(e=>{i[e].stop(e)})(u),o.classList.value=o.classList.value.replace("stop","play"),o.children[0].innerText="Play";else if(a){for(let e=0;e<d.length;e++)if(a===d[e]){u=e;break}(e=>{const t=document.getElementsByClassName("panel")[0],n=parseFloat(getComputedStyle(t).height);t.style.height=`${n-60}px`,r[e+1].remove(),r.splice(e+1,1),d.splice(e,1)})(u)}}),y.addEventListener("input",e=>{const t=e.target,n=t.closest(".interval"),l=t.closest(".volume");if(n){let e=n.value.replace(/[^\d]/g,"");n.value=e}else t.nextElementSibling.value=parseFloat(t.value).toFixed(2);if(l){let e;for(let t=0;t<p.length;t++)if(l===p[t]){e=t;break}const t=i[e];console.log(e),console.log(t),t.setVolume(l.value/10)}}),a.addEventListener("click",(function(){"play-all"===this.classList[0]?(this.classList.value=this.classList.value.replace("play-all","stop-all"),this.children[0].innerText="S-All",c.map(e=>{"play"===e.classList[0]&&e.click()})):(this.classList.value=this.classList.value.replace("stop-all","play-all"),this.children[0].innerText="All",c.map(e=>{"stop"===e.classList[0]&&e.click()}))}))}]);